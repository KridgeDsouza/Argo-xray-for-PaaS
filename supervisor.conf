[unix_http_server]
file=/var/run/supervisor.sock

[supervisord]
buffer_size=8192
nodaemon=true
user=root
logfile=/tmp/supervisord.log
pidfile=/tmp/supervisord.pid
loglevel=info

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock

[program:cloudflared_persist]
command=bash -c 'if source /app/env_vars.sh && [ -n "$ARGO_AUTH" ]; then cloudflared --no-autoupdate tunnel --edge-ip-version auto --protocol http2 run --token "$ARGO_AUTH"; else supervisorctl stop cloudflared_persist; fi'
redirect_stderr=false
autorestart=true
startretries=3

[program:cloudflared]
command=cloudflared tunnel --url http://localhost:8080 --no-autoupdate
redirect_stderr=false
autorestart=true
startretries=3
stdout_events_enabled=1
stderr_events_enabled=1
events=PROCESS_STATE,PROCESS_LOG

[eventlistener:cloudflared_monitor]
command=/app/monitor.sh
environment=VERBOSE_LEVEL=1
events=PROCESS_STATE,PROCESS_LOG

[program:bridge]
command=/bin/bash -c "/app/$(cat /app/exec.txt) -config=/app/config.json"
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
redirect_stderr=true
autorestart=false
startretries=0

[program:nginx]
command=nginx -g 'daemon off;'
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
redirect_stderr=true
autorestart=false
startretries=0
